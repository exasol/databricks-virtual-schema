sources:
  - type: maven
    path: pom.xml
    modules:
      - integration_tests
    artifacts:
      - target/databricks-virtual-schema-dist-${version}.lua
excludes:
  # Project is written in Lua, no need to test with Java 17
  - "E-PK-CORE-17: Missing required file: '.github/workflows/ci-build-next-java.yml'"
  # Project does not use Sonar and does not contain badges
  - regex: "E-PK-CORE-62: The project's README\\.md does not contain a valid badges block\\. Please add or replace the following badges:.*"
linkReplacements:
build:
  freeDiskSpace: false
  exasolDbVersions:
    - "8.29.1"
  workflows:
    - name: ci-build.yml
      stepCustomizations:
        # Install Lua & Luarocks
        - action: INSERT_AFTER
          stepId: setup-java
          content:
            name: Install Lua
            id: install-lua
            uses: leafo/gh-actions-lua@v10
            with:
              luaVersion: 5.4
        - action: INSERT_AFTER
          stepId: install-lua
          content:
            name: Install LuaRocks
            id: install-luarocks
            uses: leafo/gh-actions-luarocks@v4
            with:
              luaRocksVersion: "3.11.1"

        # Cache & install lua dependencies
        - action: INSERT_AFTER
          stepId: install-luarocks
          content:
            name: Cache Lua dependencies
            id: cache-lua-dependencies
            uses: actions/cache@v4
            with:
              path: ~/.luarocks
              key: |
                ${{ runner.os }}-lua-${{ hashFiles('*.rockspec') }}
              restore-keys: "${{ runner.os }}-lua-"
        - action: INSERT_AFTER
          stepId: cache-lua-dependencies
          content:
            name: Install Lua dependencies
            id: install-lua-dependencies
            run: luarocks --local install *.rockspec --deps-only --force

        - action: INSERT_AFTER
          stepId: enable-testcontainer-reuse
          content:
            name: Configure Databricks credentials
            id: configure-databricks-credentials
            run: |
              cat > test.properties <<EOL
              databricks.token = ${{ secrets.DATABRICKS_TOKEN }}
              databricks.host = ${{ secrets.DATABRICKS_HOST }}
              databricks.storageRoot = ${{ secrets.DATABRICKS_STORAGE_ROOT }}
              EOL

        - action: INSERT_AFTER
          stepId: build-pk-verify
          content:
            name: Archive code coverage results
            id: archive-luacov-report
            uses: actions/upload-artifact@v4
            with:
              name: luacov.report.out-exasol-${{ matrix.exasol_db_version }}
              path: target/luacov-reports/luacov.report.out
              if-no-files-found: error

        - action: INSERT_AFTER
          stepId: archive-luacov-report
          content:
            name: Run shellcheck
            id: run-shellcheck
            run: ./tools/shellcheck.sh

        # Replace Sonar
        - action: REPLACE
          stepId: cache-sonar
          content:
            name: Skip SonarCloud cache
            id: cache-sonar
            run: echo "SonarCloud analysis is skipped because the project is written in Lua."
        - action: REPLACE
          stepId: sonar-analysis
          content:
            name: Skip SonarCloud analysis
            id: sonar-analysis
            run: echo "SonarCloud analysis is skipped because the project is written in Lua."

        # Disabled until implementation is started
        #- action: INSERT_AFTER
        #  stepId: sonar-analysis
        #  content:
        #    name: Static code analysis for Lua
        #    id: static-code-analysis-lua
        #    run: ./tools/runluacheck.sh

        # Generate dummy error code reports. Error code crawler does not support Lua projects yet.
        - action: INSERT_AFTER
          stepId: build-pk-verify
          content:
            name: Generate dummy error code report
            id: generate-dummy-error-code-report
            run: echo '{"$schema":"https://schemas.exasol.com/error_code_report-1.0.0.json","errorCodes":[]}' > target/error_code_report.json

    - name: release.yml
      stepCustomizations:
        - action: INSERT_AFTER
          stepId: setup-jdks
          content:
            name: Install Lua
            id: install-lua
            uses: leafo/gh-actions-lua@v10
            with:
              luaVersion: 5.4
        - action: INSERT_AFTER
          stepId: install-lua
          content:
            name: Install LuaRocks
            id: install-luarocks
            uses: leafo/gh-actions-luarocks@v4
            with:
              luaRocksVersion: "3.11.1"
        - action: INSERT_AFTER
          stepId: install-luarocks
          content:
            name: Cache Lua dependencies
            id: cache-lua-dependencies
            uses: actions/cache@v4
            with:
              path: ~/.luarocks
              key: |
                ${{ runner.os }}-lua-${{ hashFiles('*.rockspec') }}
              restore-keys: "${{ runner.os }}-lua-"
        - action: INSERT_AFTER
          stepId: cache-lua-dependencies
          content:
            name: Install Lua dependencies
            id: install-lua-dependencies
            run: luarocks --local install *.rockspec --deps-only --force
        # Generate dummy error code reports. Error code crawler does not support Lua projects yet.
        - action: INSERT_AFTER
          stepId: build
          content:
            name: Generate dummy error code report
            id: generate-dummy-error-code-report
            run: echo '{"$schema":"https://schemas.exasol.com/error_code_report-1.0.0.json","errorCodes":[]}' > target/error_code_report.json
